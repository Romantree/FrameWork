<UserControl x:Class="TS.FW.GIGA.Views.Pages.Setup.SetupMotionView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:TS.FW.GIGA.Views.Pages.Setup"
             xmlns:vm="clr-namespace:TS.FW.GIGA.ViewModels.Pages.Setup"
             xmlns:tc="clr-namespace:TS.FW.Wpf.v2.Controls;assembly=TS.FW.Wpf.v2"
             mc:Ignorable="d"
             Style="{StaticResource xPageSub}">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="250"/>
        </Grid.RowDefinitions>

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="35"/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <tc:TextBlock3D Style="{StaticResource xTextTitle}" Text="Axis List"/>

            <DataGrid Grid.Row="1" ItemsSource="{Binding Motion.Axis}">
                <DataGrid.Columns>
                    <DataGridTemplateColumn Header="Name" Width="2*">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <tc:EventBtn Style="{StaticResource xEventBtn}"
                                             Content="{Binding Name}"
                                             Foreground="{Binding IsSeleted, Converter={StaticResource xColorCvt}, ConverterParameter=Menu}"
                                             Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:SetupMotionView}}, Path=DataContext.Motion.OnSelectAxisCmd}"
                                             CommandParameter="{Binding}"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Servo" Width="60">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <tc:EventBtn Style="{StaticResource xEventBtn}"
                                             Content="{Binding State.IsServoOn, Converter={StaticResource xStringCvt}, ConverterParameter=On/Off}"
                                             Background="{Binding State.IsServoOn, Converter={StaticResource xColorCvt}, ConverterParameter=OnOff}"
                                             Command="{Binding OnAxisCmd}" CommandParameter="Servo"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Alarm" Width="60">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <tc:EventBtn Style="{StaticResource xEventBtn}"
                                             Content="{Binding State.IsAlarm, Converter={StaticResource xStringCvt}, ConverterParameter=Error/None}"
                                             Foreground="{Binding State.IsAlarm, Converter={StaticResource xColorCvt}, ConverterParameter=Alarm}"
                                             Command="{Binding OnAxisCmd}" CommandParameter="Alarm"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn Header="Busy" Width="60" IsReadOnly="True" ElementStyle="{StaticResource GridTextBase}" Binding="{Binding State.IsBusy, Converter={StaticResource xStringCvt}, ConverterParameter=On/Off}"/>
                    <DataGridTextColumn Header="Home" Width="60" IsReadOnly="True" ElementStyle="{StaticResource GridTextBase}" Binding="{Binding State.IsHome, Converter={StaticResource xStringCvt}, ConverterParameter=On/Off}"/>
                    <DataGridTextColumn Header="(+) Limit" Width="60" IsReadOnly="True" ElementStyle="{StaticResource GridTextBase}" Binding="{Binding State.IsPlus, Converter={StaticResource xStringCvt}, ConverterParameter=On/Off}"/>
                    <DataGridTextColumn Header="(-) Limit" Width="60" IsReadOnly="True" ElementStyle="{StaticResource GridTextBase}" Binding="{Binding State.IsMinus, Converter={StaticResource xStringCvt}, ConverterParameter=On/Off}"/>
                    <DataGridTextColumn Header="Act Position (mm)" Width="*" IsReadOnly="True" ElementStyle="{StaticResource GridTextBase}" Binding="{Binding State.ActPos, StringFormat={}{0:f3}}"/>
                    <DataGridTextColumn Header="Cmd Position (mm)" Width="*" IsReadOnly="True" ElementStyle="{StaticResource GridTextBase}" Binding="{Binding State.CmdPos, StringFormat={}{0:f3}}"/>
                    <DataGridTemplateColumn Header="" Width="60">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <tc:EventBtn Style="{StaticResource xEventBtn}"
                                             Content="Reset"
                                             Command="{Binding OnAxisCmd}" CommandParameter="Reset"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>

        <Grid Grid.Row="1" DataContext="{Binding Motion.SelectAxis}">
            <Grid.RowDefinitions>
                <RowDefinition Height="35"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <tc:TextBlock3D Grid.Column="0" Style="{StaticResource xTextTitle}" Text="Motion Control"/>
            <tc:TextBlock3D Grid.Column="1" Style="{StaticResource xTextTitle}" Text="Softwaer Limit"/>

            <Border Grid.Row="1" Grid.Column="0" Style="{StaticResource xGroup3D}">
                <Grid Margin="2">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <tc:TextBlock3D Grid.Row="1" Style="{StaticResource xTextTitle}" Text="Jog / Speed"/>
                    <tc:TextBlock3D Grid.Row="2" Style="{StaticResource xTextTitle}" Text="Abs Move"/>
                    <tc:TextBlock3D Grid.Row="3" Style="{StaticResource xTextTitle}" Text="Rel Move"/>
                    <tc:TextBlock3D Grid.Row="4" Style="{StaticResource xTextTitle}" Text="Gantry"/>
                    <tc:TextBlock3D Grid.Row="4" Grid.Column="1" Grid.ColumnSpan="2" Style="{StaticResource xTextState}" Text="{Binding IsGantry, Converter={StaticResource xStringCvt}, ConverterParameter=On/Off}"/>

                    <tc:ValueBtn Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" Style="{StaticResource xValueBtn}" Content="{Binding State.Speed}" ContentStringFormat="{}{0:f3} mm/s"/>
                    <tc:ValueBtn Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" Style="{StaticResource xValueBtn}" Content="{Binding State.AbsPos}" ContentStringFormat="{}{0:f3} mm"/>
                    <tc:ValueBtn Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="2" Style="{StaticResource xValueBtn}" Content="{Binding State.RelPos}" ContentStringFormat="{}{0:f3} mm"/>

                    <tc:EventBtn Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2" Style="{StaticResource xEventBtn}" Content="Home" Command="{Binding OnAxisMoveCmd}" CommandParameter="HOME"/>
                    <tc:EventBtn Grid.Row="0" Grid.Column="3" Grid.ColumnSpan="2" Style="{StaticResource xEventBtn}" Content="Stop" Command="{Binding OnAxisStopCmd}"/>

                    <tc:EventBtn Grid.Row="1" Grid.Column="3" Style="{StaticResource xEventBtn}" FontSize="25" Content="+" CommandParameter="JOG+" LeftDownCommand="{Binding OnAxisMoveCmd}" LeftUpCommand="{Binding OnAxisStopCmd}"/>
                    <tc:EventBtn Grid.Row="1" Grid.Column="4" Style="{StaticResource xEventBtn}" FontSize="25" Content="-" CommandParameter="JOG-" LeftDownCommand="{Binding OnAxisMoveCmd}" LeftUpCommand="{Binding OnAxisStopCmd}"/>

                    <tc:EventBtn Grid.Row="2" Grid.Column="3" Grid.ColumnSpan="2" Style="{StaticResource xEventBtn}" Content="Abs Move" Command="{Binding OnAxisMoveCmd}" CommandParameter="ABS"/>

                    <tc:EventBtn Grid.Row="3" Grid.Column="3" Style="{StaticResource xEventBtn}" Content="REL +" CommandParameter="REL+" Command="{Binding OnAxisMoveCmd}"/>
                    <tc:EventBtn Grid.Row="3" Grid.Column="4" Style="{StaticResource xEventBtn}" Content="REL -" CommandParameter="REL-" Command="{Binding OnAxisMoveCmd}"/>

                    <tc:EventBtn Grid.Row="4" Grid.Column="3" Style="{StaticResource xEventBtn}" Content="On" CommandParameter="GantryOn" Command="{Binding OnAxisCmd}" IsEnabled="{Binding GantryModel}"/>
                    <tc:EventBtn Grid.Row="4" Grid.Column="4" Style="{StaticResource xEventBtn}" Content="Off" CommandParameter="GantryOff" Command="{Binding OnAxisCmd}" IsEnabled="{Binding GantryModel}"/>
                </Grid>
            </Border>

            <Border Grid.Row="1" Grid.Column="2" Style="{StaticResource xGroup3D}">
                <Grid Margin="2">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <tc:TextBlock3D Grid.Row="0" Style="{StaticResource xTextTitle}" Text="Enable"/>
                    <tc:TextBlock3D Grid.Row="1" Style="{StaticResource xTextTitle}" Text="Stop Mode"/>
                    <tc:TextBlock3D Grid.Row="2" Style="{StaticResource xTextTitle}" Text="Motion Type"/>
                    <tc:TextBlock3D Grid.Row="3" Style="{StaticResource xTextTitle}" Text="Limit Position"/>

                    <tc:OnOffBtn Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2" IsChecked="{Binding Limit.Enable}"/>
                    <tc:OnOffBtn Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" IsChecked="{Binding Limit.StopMode}" On="Slow Stop" Off="Emergency Stop"/>
                    <tc:OnOffBtn Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" IsChecked="{Binding Limit.Type}" On="Actual" Off="Command"/>

                    <tc:ValueBtn Grid.Row="3" Grid.Column="1" Style="{StaticResource xValueBtn}" Content="{Binding Limit.Plus}" ContentStringFormat="{}(+) : {0:f3} mm"/>
                    <tc:ValueBtn Grid.Row="3" Grid.Column="2" Style="{StaticResource xValueBtn}" Content="{Binding Limit.Minus}" ContentStringFormat="{}(-) : {0:f3} mm"/>

                    <tc:EventBtn Grid.Row="4" Grid.Column="1" Style="{StaticResource xEventBtn}" Content="Save" Background="Green" Command="{Binding OnAxisCmd}" CommandParameter="SetLimit"/>
                    <tc:EventBtn Grid.Row="4" Grid.Column="2" Style="{StaticResource xEventBtn}" Content="Cancel" Background="Red" Command="{Binding OnAxisCmd}" CommandParameter="UpdateLimit"/>
                </Grid>
            </Border>
        </Grid>
    </Grid>
</UserControl>
