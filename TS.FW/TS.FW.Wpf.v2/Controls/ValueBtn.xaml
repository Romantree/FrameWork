<Button x:Class="TS.FW.Wpf.v2.Controls.ValueBtn"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:local="clr-namespace:TS.FW.Wpf.v2.Controls"
        mc:Ignorable="d" 
        d:DesignHeight="40" d:DesignWidth="200" Focusable="False">
    <Button.Template>
        <ControlTemplate TargetType="Button">
            <Border x:Name="xBorder" 
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=CornerRadius}">
                <Border.Effect>
                    <DropShadowEffect ShadowDepth="3" BlurRadius="5" Color="Gray"/>
                </Border.Effect>

                <Grid>
                    <TextBlock x:Name="xRemark" Style="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=RemarkStyle}"
                               FontSize="8" FontWeight="Normal" Foreground="Black" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="2 2 0 0"/>

                    <ContentPresenter x:Name="xContent" 
                                      Content="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content}"
                                      ContentStringFormat="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ContentStringFormat}"
                                      Margin="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=MarginContent}"
                                      ContentTemplate="{TemplateBinding ContentTemplate}"                                      
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      TextBlock.FontStyle="{TemplateBinding FontStyle}"
                                      TextBlock.FontSize="{TemplateBinding FontSize}"
                                      TextBlock.FontWeight="{TemplateBinding FontWeight}"
                                      TextBlock.FontFamily="{TemplateBinding FontFamily}"
                                      TextBlock.FontStretch="{TemplateBinding FontWeight}"
                                      TextBlock.Foreground="{TemplateBinding Foreground}"/>

                    <PasswordBox x:Name="xPassword"
                                 Background="Transparent"
                                 BorderThickness="0"
                                 Visibility="Hidden"
                                 IsHitTestVisible="False"
                                 Margin="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=MarginContent}"
                                 HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                 VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                 FontStyle="{TemplateBinding FontStyle}"
                                 FontSize="{TemplateBinding FontSize}"
                                 FontWeight="{TemplateBinding FontWeight}"
                                 FontFamily="{TemplateBinding FontFamily}"
                                 FontStretch="{TemplateBinding FontWeight}"
                                 Foreground="{TemplateBinding Foreground}"/>
                </Grid>
            </Border>

            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsMouseOver" Value="True">
                    <Setter TargetName="xBorder" Property="Effect" Value="{x:Null}"/>
                </Trigger>
                <Trigger Property="local:ValueBtn.Shadow" Value="False">
                    <Setter TargetName="xBorder" Property="Effect" Value="{x:Null}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Opacity" Value="0.5"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Button.Template>    
</Button>
